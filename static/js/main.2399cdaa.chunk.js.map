{"version":3,"sources":["assets/logo.svg","components/Navigation/Navigation.js","assets/image-mockups.png","components/Home/Intro/Intro.js","components/Home/Home.js","containers/Easybank.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","tabRoot","minWidth","padding","toolbar","backgroundColor","paper","margin","Navigation","classes","useState","value","setValue","handleChange","event","newValue","mobileView","drawerOpen","state","setState","navLinks","links","label","useEffect","setResponsiveness","window","innerWidth","prevState","addEventListener","AppBar","position","Toolbar","className","Box","display","flexGrow","src","logo","alt","IconButton","edge","color","onClick","Drawer","anchor","open","onClose","transitionDuration","map","nav","i","Paper","Tabs","TabIndicatorProps","style","background","onChange","indicatorColor","textColor","centered","Tab","root","Intro","phones","Home","Easybank","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2399cdaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4d7cebc5.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./Navigation.css\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Toolbar,\r\n  Drawer,\r\n  IconButton,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles({\r\n  tabRoot: {\r\n    minWidth: \"100px\",\r\n    padding: \"20px\",\r\n  },\r\n  toolbar: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  paper: {\r\n    margin: \"50px\",\r\n    padding: \"25px\",\r\n  },\r\n});\r\n\r\nfunction Navigation() {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const navLinks = {\r\n    links: [\r\n      { label: \"HOME\" },\r\n      { label: \"ABOUT\" },\r\n      { label: \"CONTACT\" },\r\n      { label: \"BLOG\" },\r\n      { label: \"CAREERS\" },\r\n    ],\r\n  };\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 760\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Paper>\r\n        <div className=\"NavBarLayout\">\r\n          <img src={logo} alt=\"easy bank logo\" />\r\n          <Tabs\r\n            TabIndicatorProps={{\r\n              style: {\r\n                background:\r\n                  \"linear-gradient( hsl(136, 65%, 51%), hsl(192, 70%, 51%))\",\r\n              },\r\n            }}\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            {navLinks.links.map((nav, i) => {\r\n              return (\r\n                <Tab\r\n                  key={i}\r\n                  classes={{ root: classes.tabRoot }}\r\n                  label={nav.label}\r\n                />\r\n              );\r\n            })}\r\n          </Tabs>\r\n          <button className=\"Button\">Request Invite</button>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar className={classes.toolbar}>\r\n        <Box display=\"flex\" flexGrow={1}>\r\n          <img src={logo} alt=\"easy bank logo\" />\r\n        </Box>\r\n        <IconButton\r\n          {...{\r\n            edge: \"end\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          classes={{ paper: classes.paper }}\r\n          anchor=\"top\"\r\n          open={drawerOpen}\r\n          onClose={handleDrawerClose}\r\n          transitionDuration={700}\r\n        >\r\n          {navLinks.links.map((nav, i) => {\r\n            return (\r\n              <div key={i} className=\"NavBarMobile\">\r\n                <h1>{nav.label}</h1>\r\n              </div>\r\n            );\r\n          })}\r\n        </Drawer>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"relative\">\r\n      {mobileView ? displayMobile() : displayDesktop()}\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/image-mockups.48d35b17.png\";","import React from \"react\";\r\nimport phones from \"../../../assets/image-mockups.png\";\r\nimport \"./Intro.css\";\r\n\r\nfunction Intro() {\r\n  return (\r\n    <div className=\"IntroBackground\">\r\n      <div className=\"Intro\">\r\n        <div>\r\n          <h1>Next Generation Digital Banking</h1>\r\n          <p>\r\n            Take your financial life online. Your Easybank account will be a\r\n            one-stop-shop for spending, saving, budgeting, investing, and much\r\n            more\r\n          </p>\r\n          <button>Request Invite</button>\r\n        </div>\r\n        {/* <div className=\"IntroBackground\"> */}\r\n        <img src={phones} alt=\"image mockups\" />\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport Intro from \"./Intro/Intro\";\r\n// import Choose from \"./Choose/Choose\";\r\n// import Articles from \"./Articles/Articles\";\r\n// import Container from \"@material-ui/core/Container\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Intro />\r\n      {/* <Choose />\r\n      <Articles /> */}\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport Home from \"../components/Home/Home\";\r\n\r\nfunction Easybank() {\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Home />\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Easybank;\r\n","import \"./App.css\";\nimport Easybank from \"./containers/Easybank\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Easybank />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}